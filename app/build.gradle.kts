/*
 * This file was generated by the Gradle 'init' task.
 *
 * This generated file contains a sample Java application project to get you started.
 * For more details on building Java & JVM projects, please refer to https://docs.gradle.org/8.13/userguide/building_java_projects.html in the Gradle documentation.
 */
sourceSets {
    test {
        java {
            srcDirs("src/test/java")
        }
    }
}

plugins {
    // Apply the application plugin to add support for building a CLI application in Java.
    application
}

repositories {
    // Use Maven Central for resolving dependencies.
    mavenCentral()
}

dependencies {
    // Use JUnit Jupiter for testing.
    testImplementation(libs.junit.jupiter)

    testRuntimeOnly("org.junit.platform:junit-platform-launcher")

    // This dependency is used by the application.
    implementation(libs.guava)
}

// Apply a specific Java toolchain to ease working on different environments.
java {
    toolchain {
        languageVersion = JavaLanguageVersion.of(17)
    }
}

application {
    // Define the main class for the application.
    mainClass = "org.example.Caller"

}


// Register a task to run the test script
//tasks.register<Exec>("runQueryTestScript") {
//    workingDir = file("src/test/java/org/example")  // Make sure this is the correct directory
//    commandLine = listOf("./test_script.sh")
//}

//tasks.named<Test>("test") {
//    // dependsOn("runQueryTestScript")  // Ensure the script runs before unit tests
//    // Use JUnit Platform for unit tests.
//    useJUnitPlatform()
//}
//    // Enable logging for standard output and error streams.
//    testLogging {
//        events("passed", "failed", "skipped", "standard_out", "standard_error")
//        showStandardStreams = true // This ensures standard streams are displayed in the console.
//    }
//}

tasks.jar {
    manifest {
        attributes["Main-Class"] = "org.example.Caller"
    }
}